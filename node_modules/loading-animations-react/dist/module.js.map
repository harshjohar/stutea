{"mappings":"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","sources":["src/index.js","src/components/Dots/index.js","src/components/Dots/index.css","src/components/MinimalSpinner/index.js","src/components/MinimalSpinner/index.css","src/components/ProgressBar/index.js","src/components/ProgressBar/index.css","src/components/Spinner/index.js","src/components/Spinner/index.css","src/components/TrinitySpinner/index.js","src/components/TrinitySpinner/index.css","src/components/Waves/index.js","src/components/Waves/index.css"],"sourcesContent":["import { Dots } from './components/Dots';\nimport { MinimalSpinner } from './components/MinimalSpinner';\nimport { ProgressBar } from './components/ProgressBar';\nimport { Spinner } from './components/Spinner';\nimport { TrinitySpinner } from './components/TrinitySpinner';\nimport { Waves } from './components/Waves';\n\nexport { Dots, MinimalSpinner, ProgressBar, Spinner, TrinitySpinner, Waves };\n","import React from 'react';\nimport * as classes from './index.css';\n\nexport function Dots({\n  dotColors = ['blue', 'violet', 'red', 'orange', 'yellow', 'green'],\n  text = 'Loading...',\n  id = '',\n  className = '',\n}) {\n  // Setup newColors array\n  const newColors = [];\n  let dotColorsIndex = 0;\n  let newColorsIndex = 0;\n  while (newColorsIndex <= 5) {\n    if (dotColors[dotColorsIndex]) {\n      newColors.push(dotColors[dotColorsIndex]);\n      newColorsIndex += 1;\n      dotColorsIndex += 1;\n    } else {\n      dotColorsIndex = 0;\n    }\n  } // Setup array of dot elements\n\n  let dots = new Array(6).fill('').map((e, index) => {\n    return (\n      <div\n        key={index}\n        className={classes.dot}\n        style={{\n          backgroundColor: newColors[index],\n          animationDelay: `0.${index}s`,\n        }}\n      ></div>\n    );\n  });\n\n  return (\n    <div id={id} className={`${classes.dotsWrapper} ${className}`}>\n      <div className={classes.dots}>{dots}</div>\n      <div className={classes.dotsText}>{text}</div>\n    </div>\n  );\n}\n",".dotsWrapper {\n  box-sizing: border-box;\n}\n\n.dotsWrapper *,\n.dotsWrapper *:before,\n.dotsWrapper *:after {\n  box-sizing: inherit;\n}\n\n.dots {\n  position: relative;\n  width: 100%;\n  padding-top: 6.6%;\n}\n\n.dots .dot {\n  width: 6.6%;\n  padding-top: 6.6%;\n  animation: loader 2s ease-in-out infinite;\n  border-radius: 100%;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.dotsText {\n  width: 100%;\n  text-align: center;\n}\n\n@keyframes loader {\n  0% {\n    transform: translateX(0);\n  }\n  50% {\n    transform: translateX(1420%);\n  }\n  100% {\n    transform: translateX(0);\n  }\n}\n","import * as classes from './index.css';\n\nexport function MinimalSpinner({\n  text = 'Loading...',\n  color = 'blue',\n  id = '',\n  className = '',\n}) {\n  const style = `\n    .${classes.minimalSpinner} {\n      border-color: transparent ${color} transparent ${color};\n    }\n    .${classes.minimalSpinnerText} {\n      color: ${color};\n    }`;\n  return (\n    <div id={id} className={`${classes.minimalSpinnerWrapper} ${className}`}>\n      <div className={classes.minimalSpinner}>\n        <div className={classes.minimalSpinnerText}>{text}</div>\n      </div>\n      <style>{style}</style>\n    </div>\n  );\n}\n",".minimalSpinnerWrapper {\n  box-sizing: border-box;\n}\n\n.minimalSpinnerWrapper *,\n.minimalSpinnerWrapper *:before,\n.minimalSpinnerWrapper *:after {\n  box-sizing: inherit;\n}\n\n.minimalSpinner {\n  width: 100%;\n  padding: 50% 0;\n  border-radius: 100%;\n  display: flex;\n  align-items: center;\n  border: 2px solid transparent;\n  animation: rotate-spinner 1.5s linear 0s infinite forwards;\n}\n\n.minimalSpinnerText {\n  text-align: center;\n  position: absolute;\n  width: 100%;\n  animation: rotate-text 1.5s linear 0s infinite backwards;\n}\n\n@keyframes rotate-spinner {\n  0% {\n    transform: rotate(360deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes rotate-text {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import * as classes from './index.css';\n\nexport function ProgressBar({\n  text = 'Loading...',\n  borderColor = 'navy',\n  sliderColor = 'white',\n  sliderBackground = 'red',\n  id = '',\n  className = '',\n}) {\n  const style = `\n    .${classes.progressBar} {\n      background-color: ${borderColor};\n    }\n    .${classes.sliderBackground} {\n      background-color: ${sliderBackground};\n    }\n    .${classes.slider} {\n      background-color: ${sliderColor};\n    }`;\n  return (\n    <div id={id} className={`${classes.progressBarWrapper} ${className}`}>\n      <div className={classes.progressBar}>\n        <div className={classes.sliderBackground}>\n          <div className={classes.slider}></div>\n        </div>\n      </div>\n      <div className={classes.progressBarText}>{text}</div>\n      <style>{style}</style>\n    </div>\n  );\n}\n",".progressBarWrapper {\n  box-sizing: border-box;\n}\n.progressBarWrapper *,\n.progressBarWrapper *:before,\n.progressBarWrapper *:after {\n  box-sizing: inherit;\n}\n\n.progressBar {\n  width: 100%;\n  padding: 5%;\n  border-radius: 15px;\n}\n\n.sliderBackground {\n  background-color: #000;\n  border-radius: 15px;\n}\n\n.slider {\n  padding-top: 5%;\n  border-radius: 15px;\n  animation: progres 4s infinite linear;\n}\n.progressBarText {\n  width: 100%;\n  text-align: center;\n}\n@keyframes progres {\n  0% {\n    width: 0%;\n  }\n  25% {\n    width: 50%;\n  }\n  50% {\n    width: 75%;\n  }\n  75% {\n    width: 85%;\n  }\n  100% {\n    width: 100%;\n  }\n} ;\n","import * as classes from './index.css';\n\nexport function Spinner({\n  id = '',\n  className = '',\n  color1 = 'green',\n  color2 = 'lightGreen',\n  text = 'Loading...',\n  textColor = '',\n  // noGradientText = false,\n}) {\n  let style = `.${classes.spinnerText} {\n    background: linear-gradient(90deg, ${color1}, ${color2});\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    font-weight: bold;\n  }`;\n\n  if (textColor !== '') {\n    style = `\n      .${classes.spinnerText} {\n      font-weight: bold;\n      color: ${textColor}\n      }`;\n  }\n\n  return (\n    <div id={id} className={`${classes.spinnerWrapper} ${className}`}>\n      <div className={classes.spinner}>\n        <svg className={classes.viewBox} viewBox='0 0 50 50'>\n          <circle\n            className={classes.circle}\n            cx='25'\n            cy='25'\n            r='22.5'\n            fill='none'\n            strokeWidth='5'\n            stroke='url(#myGradient)'\n          ></circle>\n          <defs>\n            <linearGradient id='myGradient'>\n              <stop offset='0%' stopColor={color1} />\n              <stop offset='100%' stopColor={color2} />\n            </linearGradient>\n          </defs>\n        </svg>\n        <div className={`gradientText ${classes.spinnerText}`}>{text}</div>\n      </div>\n      <style>{style}</style>\n    </div>\n  );\n}\n",".spinnerWrapper {\n  box-sizing: border-box;\n}\n\n.spinnerWrapper *,\n.spinnerWrapper *:before,\n.spinnerWrapper *:after {\n  box-sizing: inherit;\n  width: 100%;\n}\n\n.spinner {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.spinner .viewBox {\n  animation: rotate 1s linear infinite;\n  display: block;\n}\n\n.spinner .circle {\n  stroke-linecap: round;\n  animation: dash 2s ease-in-out infinite;\n  position: absolute;\n}\n\n.spinner .spinnerText {\n  position: absolute;\n  width: 100%;\n  text-align: center;\n}\n\n@keyframes rotate {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes dash {\n  0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -141;\n  }\n}\n","import * as classes from './index.css';\n\nexport function TrinitySpinner({\n  color = 'red',\n  text = 'Loading...',\n  id = '',\n  className = '',\n}) {\n  const style = `.${classes.trinitySpinnerText} { color: ${color} }`;\n  return (\n    <div id={id} className={`${classes.trinitySpinnerWrapper} ${className}`}>\n      <div className={classes.trinitySpinner}>\n        <svg className={classes.spinner} viewBox='0 0 100 100'>\n          <defs>\n            <filter id='shadow'>\n              <feDropShadow dx='0' dy='0' stdDeviation='2' floodColor='black' />\n            </filter>\n          </defs>\n          <circle\n            className={classes.circle}\n            style={{\n              fill: 'transparent',\n              stroke: color,\n              strokeWidth: '7px',\n              strokeLinecap: 'round',\n              filter: 'url(#shadow)',\n            }}\n            cx='50'\n            cy='50'\n            r='45'\n          />\n        </svg>\n        <div className={classes.trinitySpinnerText}>{text}</div>\n      </div>\n      <style>{style}</style>\n    </div>\n  );\n}\n",".trinitySpinnerWrapper {\n  box-sizing: border-box;\n}\n\n.trinitySpinnerWrapper *,\n.trinitySpinnerWrapper *:before,\n.trinitySpinnerWrapper *:after {\n  box-sizing: inherit;\n}\n\n.trinitySpinner {\n  width: 100%;\n  padding: 50% 0;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.trinitySpinner .spinner {\n  position: absolute;\n}\n\n.trinitySpinner .circle {\n  transform-origin: center;\n  animation-name: animation;\n  animation-duration: 1.2s;\n  animation-timing-function: cubic-bezier;\n  animation-iteration-count: infinite;\n}\n\n.trinitySpinner .trinitySpinnerText {\n  position: absolute;\n  width: 100%;\n  text-align: center;\n}\n\n@keyframes animation {\n  0% {\n    stroke-dasharray: 1 98;\n    stroke-dashoffset: -105;\n  }\n  50% {\n    stroke-dasharray: 80 10;\n    stroke-dashoffset: -160;\n  }\n  100% {\n    stroke-dasharray: 1 98;\n    stroke-dashoffset: -300;\n  }\n}\n","import * as classes from './index.css';\n\nexport function Waves({\n  backgroundColor = '#000',\n  waveColor = 'cyan',\n  text = 'Loading...',\n  id = '',\n  className = '',\n}) {\n  const style = `\n    .${classes.waves} {\n      background-color: ${backgroundColor}\n    }\n    .${classes.wave} {\n      background: linear-gradient(45deg, ${waveColor}, #fff)\n    }`;\n  // Setup array of wave elements\n  const waves = new Array(10).fill('').map((e, index) => {\n    return (\n      <div\n        key={index}\n        className={classes.wave}\n        style={{ animationDelay: `0.${index}s` }}\n      ></div>\n    );\n  });\n\n  return (\n    <div id={id} className={`${classes.wavesWrapper} ${className}`}>\n      <div className={classes.waves}>{waves}</div>\n      <div className={classes.wavesText}>{text}</div>\n      <style>{style}</style>\n    </div>\n  );\n}\n",".wavesWrapper {\n  box-sizing: border-box;\n}\n\n.wavesWrapper *,\n.wavesWrapper *:before,\n.wavesWrapper *:after {\n  box-sizing: inherit;\n}\n\n.waves {\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-content: center;\n}\n\n.waves .wave {\n  width: 3.3%;\n  padding: 20% 0;\n  animation: wave 1s linear infinite;\n}\n\n.wavesText {\n  text-align: center;\n}\n\n@keyframes wave {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n"],"names":[],"version":3,"file":"module.js.map"}